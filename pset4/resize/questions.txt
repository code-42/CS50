1. What’s stdint.h?

    ref= https://www.ibm.com/support/knowledgecenter/en/ssw_ibm_i_72/rtref/stdinth.htm

    The <stdint.h> include file declares sets of integer types that have specified widths and defines corresponding sets of macros. It also defines macros that specify limits of integer types corresponding to the types defined in other standard include files.

    The following exact-width integer types are defined:
    int8_t, int16_t, int32_t, int64_t, uint8_t, uint16_t, uint32_t, uint64_t


2. What’s the point of using uint8_t, uint32_t, int32_t, and uint16_t in a program?

    First, for portability among different computer architectures.

    By using int8_t instead of char, you know that you always get a signed 8 bit variable. char can be signed or unsigned, it is implementation-defined behavior and varies between compilers. Therefore, the default char is plain dangerous to use in code that should be portable.

    Use uint8_t rather than unsigned char if you want to document that your program requires char to be exactly 8 bits. uint8_t exists if and only if CHAR_BIT==8, per the requirements of the C standard.


3. How many bytes is a BYTE, a DWORD, a LONG, and a WORD, respectively?

    1 byte, 4 bytes, 4 bytes and 2 bytes, respectively


4. What (in ASCII, decimal, or hexadecimal) must the first two bytes of any BMP file be? Leading bytes used to identify file formats (with high probability) are generally called "magic numbers."

    The first 2 bytes of the BMP file format are the character "B" then the character "M" in ASCII encoding.

    ref= https://en.wikipedia.org/wiki/BMP_file_format


5. What’s the difference between bfSize and biSize?

    bfSize is the size of the whole bmp file, which includes the headerfiles, while biSize is the size of the BITMAPINFOHEADER header file. biSize is constant and it equals 40 bytes.

    ref= https://www.quora.com/How-are-bfsize-and-bisize-different


6. What does it mean if biHeight is negative?

    If biHeight is negative, the image is top-down.

    ref= https://msdn.microsoft.com/en-us/library/windows/desktop/dd407212(v=vs.85).aspx


7. What field in BITMAPINFOHEADER specifies the BMP’s color depth (i.e., bits per pixel)?

    biBitCount

    ref= https://msdn.microsoft.com/en-us/library/windows/desktop/dd318229(v=vs.85).aspx


8. Why might fopen return NULL in lines 24 and 32 of copy.c?

    Something might go wrong, if maybe I don't have permission on the computer to create files, maybe the computer's out of space or something-- something could go wrong and null is returned per the documentation for fopen or its man page.

    ref= http://cdn.cs50.net/2016/fall/lectures/4/lang/en/week4.txt


9. Why is the third argument to fread always 1 in our code?

    number of elements to read

    ref = Zamyla's walkthrough -->  https://youtu.be/Igsa7V5ouzg?t=186


10. What value does line 65 of copy.c assign to padding if bi.biWidth is 3?

    if I change bi.biWidth to 3, padding is assigned the value 3
    because if I leave bi.biWidth as it is, padding is 0

    // int padding =  (4 - (bi.biWidth * sizeof(RGBTRIPLE)) % 4) % 4;
    int padding =  (4 - (3 * sizeof(RGBTRIPLE)) % 4) % 4;
    printf("67. padding == %d\n", padding);

    but it has no visible effect on verdict.bmp as far as I can see with my eyes


11. What does fseek do?

    // skip over padding, if any


12. What is SEEK_CUR?

    Current position of the file pointer

    ref= https://www.tutorialspoint.com/c_standard_library/c_function_fseek.htm